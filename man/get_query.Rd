% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{get_query}
\alias{get_query}
\title{Execute a SQL Query}
\usage{
get_query(
  conn = NULL,
  query,
  params = NULL,
  auto_reconnect = TRUE,
  debug = FALSE
)
}
\arguments{
\item{conn}{Database connection object (optional, uses global connection if NULL)}

\item{query}{SQL query string}

\item{params}{Optional parameters for prepared statements}

\item{auto_reconnect}{Whether to attempt reconnection if the connection is lost (default: TRUE)}

\item{debug}{Enable verbose debug output (default: FALSE)}
}
\value{
Query results as a data frame
}
\description{
Executes a SQL query against a TimescaleDB database and returns the results.
This function is flexible and can be called in multiple ways:
- With a connection and query: get_query(conn, query, ...)
- With just a query (using global connection): get_query(query, ...)
- With named parameters: get_query(query = "SELECT ...", params = list(...))
}
\examples{
\dontrun{
# Initialize global connection
init_connection(
  host = "localhost", port = 5432,
  db = "testdb", user = "testuser", pass = "testpass"
)

# Using an explicit connection
conn <- get_connection()
# Basic query with explicit connection
result <- get_query(conn, "SELECT * FROM my_table LIMIT 10")
# Query with parameters and explicit connection
result <- get_query(
  conn,
  "SELECT * FROM my_table WHERE value > $1 AND time > $2",
  params = list(100, "2023-01-01")
)

# Using global connection (common usage)
# Simple query with global connection
result <- get_query("SELECT * FROM my_table LIMIT 10")
# Query with named parameters
result <- get_query(
  query = "SELECT * FROM my_table WHERE value > $1 AND time > $2",
  params = list(100, "2023-01-01")
)

# Shortened syntax for global connection
temps <- get_query("SELECT time, temperature FROM weather_data")

# Always close the connection when done
close_connection()
}
}
